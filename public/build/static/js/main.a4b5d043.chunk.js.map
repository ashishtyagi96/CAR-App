{"version":3,"sources":["assets/images/car.png","constant.js","helpers/cookie.js","helpers/xhrHelpers.js","modules/years/index.js","modules/companies/index.js","modules/models/index.js","modules/cars/index.js","modules/index.js","store.js","components/common/IndefiniteLoader.js","helpers/numberFormatter.js","components/car-filters/index.js","components/pages/home/index.js","containers/pages/home/index.js","helpers/url/cars.js","components/card-section/index.js","components/checkout/index.js","helpers/url/payments.js","components/pages/cars/index.js","containers/pages/cars/index.js","routes/global.js","App.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","PATH","window","location","href","split","slice","join","REQUEST_TYPE","getCookie","name","cookie_val","document","cookie","parts","length","decodeURIComponent","pop","shift","xFetch","options","headers","Accept","queryParams","postData","queryMethod","query","method","toUpperCase","post_body","body","multipart","JSON","stringify","Object","assign","parsedUrl","urlParser","url","set","additional","credentials","extras","fetch","toString","then","response","a","json","res","console","log","Error","catch","err","setCarsYearOfMake","state","data","years","setCarsCompanies","companies","setCarsModels","cars","setCarDetails","car_details","rootReducer","combineReducers","action","type","payload","middleWares","thunk","composedEnhancers","compose","applyMiddleware","IndefiniteLoader","className","iconClassName","indicator","spin","numberFormat","value","Intl","NumberFormat","style","currency","maximumFractionDigits","format","CheckableTag","Tag","Search","Input","Meta","Card","CarFilters","loading","selectedTags","selectedCompanyTags","selectedModelTags","showCompany","showModel","searchOn","search_input","onSearch","fetchAllCarsYearOfMake","props","fetchAllCarsCompanies","year_of_make","company","fetchAllCarsModels","model","onChange","event","search","target","setState","showCar","car_id","history","push","tag","checked","selected","this","year_data","company_data","model_data","keys","map","key","span","placeholder","allowClear","margin","size","header","textAlign","fontWeight","bordered","dataSource","renderItem","item","Item","indexOf","handleChange","cursor","fontSize","width","overflow","height","backgroundColor","handleChangeCompany","hidden","onClick","id","border","cover","alt","src","actions","color","amount","is_available","percent","title","status","description","orientation","React","Component","Home","getData","renderLoading","withRouter","connect","dispatch","year","CARD_ELEMENT_OPTIONS","base","fontFamily","fontSmoothing","invalid","CardSection","email_id","autoComplete","required","paddingTop","CheckoutForm","doPayment","token","pathname","message","success","error","buttonLoading","button_text","handleSubmit","preventDefault","stripe","elements","getElement","CardExpiryElement","CardCvcElement","card","CardNumberElement","createToken","result","disabled","InjectedCheckoutForm","stripePromise","loadStripe","Cars","returnToHome","Stripe","card_number_1","card_number_2","card_number_3","card_number_4","expiry_date","cvv","fetchCarDetails","match","params","tax","padding","paddingLeft","position","car","float","borderRadius","CloseOutlined","marginTop","top","marginRight","boxShadow","letterSpacing","total","display","getCarDetailsUrl","Global","fallback","exact","path","component","HOME","CARS","createBrowserHistory","App","auth","isAuthenticated","Boolean","hostname","store","createStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a4b5d043.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/car.5587e45f.png\";","const path = window.location.href;\n\nexport const HOST = path\n    .split(\"/\")\n    .slice(0, 3)\n    .join(\"/\");\n\nexport const PATH = {\n    ROOT: \"/\",\n    HOME: \"/home\",\n    CARS: \"/cars\"\n};\n\nexport const REQUEST_TYPE = {\n    POST: \"post\",\n    GET: \"get\",\n    PUT: \"put\",\n    DELETE: \"delete\"\n};\n","export function getCookie(name) {\n    let cookie_val = null;\n    if (document && document.cookie) {\n        var value = \"; \" + document.cookie;\n        var parts = value.split(\"; \" + name + \"=\");\n        if (parts.length === 2) {\n            cookie_val = decodeURIComponent(\n                parts\n                    .pop()\n                    .split(\";\")\n                    .shift()\n            );\n        }\n    }\n    return cookie_val;\n}\n\n/*\n * name - string, cookie name\n * value - string, cookie value\n * expires - string, time in GMT,\n * path - string, path at which cookie needs to be stored, default value: '/'\n * domain - string, subdomain, default value: COOKIE_DOMAIN\n * secure - boolean, set https cookie or not, default: false\n */\n\nexport function setCookie(\n    name,\n    value,\n    expires,\n    path = \"/\",\n    domain = \"COOKIE_DOMAIN\",\n    secure = false\n) {\n    let cookie =\n        name +\n        \"=\" +\n        encodeURIComponent(value) +\n        \";path=\" +\n        path +\n        \";domain=\" +\n        domain +\n        \";expires=\" +\n        expires;\n    if (typeof secure !== \"undefined\" && secure) {\n        cookie = cookie + \";secure=true\";\n    }\n    document.cookie = cookie;\n}\n","import urlParser from \"url-parse\";\nimport { getCookie } from \"./cookie\";\n\nexport function xFetch(options = {}) {\n    let headers = {\n        \"X-XSRF-TOKEN\": getCookie(\"XSRF-TOKEN\"),\n        Accept: \"application/json\"\n    };\n\n    let queryParams = {};\n    let postData = null;\n    let queryMethod = null;\n    const { query = {} } = options;\n\n    if (!options.method || options.method.toUpperCase() === \"GET\") {\n        if (options.body) {\n            queryParams = Object.assign({}, options.body, queryParams);\n        }\n        queryMethod = { method: \"GET\" };\n    } else {\n        let post_body = options.body || {};\n\n        if (options.multipart) {\n            postData = { body: post_body };\n        } else {\n            headers[\"Content-type\"] = \"application/json\";\n\n            postData = { body: JSON.stringify(post_body) };\n        }\n\n        queryMethod = { method: options.method };\n    }\n\n    const parsedUrl = new urlParser(`${options.url}`, true);\n\n    queryParams = Object.assign({}, parsedUrl.query, query, queryParams);\n\n    //Forming the new URL\n    parsedUrl.set(\"query\", queryParams);\n\n    if (!!options.headers) {\n        headers = Object.assign({}, headers, options.headers);\n    }\n\n    let additional = Object.assign(\n        {},\n        { credentials: \"same-origin\" },\n        queryMethod,\n        { headers: headers },\n        options.extras,\n        postData\n    );\n    return fetch(parsedUrl.toString(), additional)\n        .then(async response => {\n            try {\n                const res = await response.json();\n                return res;\n            } catch (ex) {\n                console.log(\"ex\", ex);\n                throw new Error(\"something went wrong\");\n            }\n        })\n        .catch(err => console.log(err));\n}\n","import { REQUEST_TYPE } from \"../../constant\";\nimport { xFetch } from \"../../helpers/xhrHelpers\";\nimport { getAllCarsYearOfMakeUrl } from \"../../helpers/url/cars\";\n\nexport const DISPATCH_ACTION_TYPE = \"DISPATCH_ACTION_TYPE\";\nexport const FETCHING_ALL_CARS_YEAR_OF_MAKE = \"FETCHING_ALL_CARS_YEAR_OF_MAKE\";\nexport const FETCHING_ALL_CARS_YEAR_OF_MAKE_COMPLETED =\n    \"FETCHING_ALL_CARS_YEAR_OF_MAKE_COMPLETED\";\nexport const FETCHING_ALL_CARS_YEAR_OF_MAKE_COMPLETED_WITH_ERROR =\n    \"FETCHING_ALL_CARS_YEAR_OF_MAKE_COMPLETED_WITH_ERROR\";\n\nexport const fetchAllCarsYearOfMake = (year='') => {\n    let response = {};\n    const url = getAllCarsYearOfMakeUrl();\n    return async dispatch => {\n        try {\n            response = await xFetch({\n                url: url,\n                method: REQUEST_TYPE.GET,\n                body: { year: year }\n            });\n            const { status, payload: { data } = {} } = response || {};\n            if (status === true) {\n                dispatch({\n                    type: FETCHING_ALL_CARS_YEAR_OF_MAKE_COMPLETED,\n                    payload: data\n                });\n            } else if (status === false) {\n                dispatch({\n                    type: FETCHING_ALL_CARS_YEAR_OF_MAKE_COMPLETED_WITH_ERROR\n                });\n            }\n        } catch (error) {\n            throw error;\n        }\n        return response;\n    };\n};\n\nfunction setCarsYearOfMake(state, data) {\n    const { years } = data;\n    if (years) {\n        return { ...years };\n    }\n    return state;\n}\n\nexport default (state = {}, action = {}) => {\n    const { type, payload = {} } = action;\n    switch (type) {\n        default:\n            return setCarsYearOfMake(state, payload);\n    }\n};\n","import { REQUEST_TYPE } from \"../../constant\";\nimport { xFetch } from \"../../helpers/xhrHelpers\";\nimport { getAllCarsCompaniesrl } from \"../../helpers/url/cars\";\n\nexport const DISPATCH_ACTION_TYPE = \"DISPATCH_ACTION_TYPE\";\nexport const FETCHING_ALL_CARS_COMPANIES = \"FETCHING_ALL_CARS_COMPANIES\";\nexport const FETCHING_ALL_CARS_COMPANIES_COMPLETED =\n    \"FETCHING_ALL_CARS_COMPANIES_COMPLETED\";\nexport const FETCHING_ALL_CARS_COMPANIES_COMPLETED_WITH_ERROR =\n    \"FETCHING_ALL_CARS_COMPANIES_COMPLETED_WITH_ERROR\";\n\nexport const fetchAllCarsCompanies = (query) => {\n    let response = {};\n    const url = getAllCarsCompaniesrl();\n    return async dispatch => {\n        try {\n            response = await xFetch({\n                url: url,\n                method: REQUEST_TYPE.GET,\n                body: query\n            });\n            const { status, payload: { data } = {} } = response || {};\n            if (status === true) {\n                dispatch({\n                    type: FETCHING_ALL_CARS_COMPANIES_COMPLETED,\n                    payload: data\n                });\n            } else if (status === false) {\n                dispatch({\n                    type: FETCHING_ALL_CARS_COMPANIES_COMPLETED_WITH_ERROR\n                });\n            }\n        } catch (error) {\n            throw error;\n        }\n        return response;\n    };\n};\n\nfunction setCarsCompanies(state, data) {\n    const { companies } = data;\n    if (companies) {\n        return { ...companies };\n    }\n    return state;\n}\n\nexport default (state = {}, action = {}) => {\n    const { type, payload = {} } = action;\n    switch (type) {\n        default:\n            return setCarsCompanies(state, payload);\n    }\n};\n","import { REQUEST_TYPE } from \"../../constant\";\nimport { xFetch } from \"../../helpers/xhrHelpers\";\nimport { getAllCarsModelsrl } from \"../../helpers/url/cars\";\n\nexport const DISPATCH_ACTION_TYPE = \"DISPATCH_ACTION_TYPE\";\nexport const FETCHING_ALL_CARS_MODELS = \"FETCHING_ALL_CARS_MODELS\";\nexport const FETCHING_ALL_CARS_MODELS_COMPLETED =\n    \"FETCHING_ALL_CARS_MODELS_COMPLETED\";\nexport const FETCHING_ALL_CARS_MODELS_COMPLETED_WITH_ERROR =\n    \"FETCHING_ALL_CARS_MODELS_COMPLETED_WITH_ERROR\";\n\nexport const fetchAllCarsModels = (query) => {\n    let response = {};\n    const url = getAllCarsModelsrl();\n    return async dispatch => {\n        try {\n            response = await xFetch({\n                url: url,\n                method: REQUEST_TYPE.GET,\n                body: query\n            });\n            const { status, payload: { data } = {} } = response || {};\n            if (status === true) {\n                dispatch({\n                    type: FETCHING_ALL_CARS_MODELS_COMPLETED,\n                    payload: data\n                });\n            } else if (status === false) {\n                dispatch({\n                    type: FETCHING_ALL_CARS_MODELS_COMPLETED_WITH_ERROR\n                });\n            }\n        } catch (error) {\n            throw error;\n        }\n        return response;\n    };\n};\n\nfunction setCarsModels(state, data) {\n    const { cars } = data;\n    if (cars) {\n        return { ...cars };\n    }\n    return state;\n}\n\nexport default (state = {}, action = {}) => {\n    const { type, payload = {} } = action;\n    switch (type) {\n        default:\n            return setCarsModels(state, payload);\n    }\n};\n","import { REQUEST_TYPE } from \"../../constant\";\nimport { xFetch } from \"../../helpers/xhrHelpers\";\nimport { getCarDetailsUrl } from \"../../helpers/url/cars\";\n\nexport const DISPATCH_ACTION_TYPE = \"DISPATCH_ACTION_TYPE\";\nexport const FETCHING_CAR_DETAILS = \"FETCHING_CAR_DETAILS\";\nexport const FETCHING_CAR_DETAILS_COMPLETED =\n    \"FETCHING_CAR_DETAILS_COMPLETED\";\nexport const FETCHING_CAR_DETAILS_COMPLETED_WITH_ERROR =\n    \"FETCHING_CAR_DETAILS_COMPLETED_WITH_ERROR\";\n\nexport const fetchCarDetails = (car_id) => {\n    let response = {};\n    const url = getCarDetailsUrl(car_id);\n    return async dispatch => {\n        try {\n            response = await xFetch({\n                url: url,\n                method: REQUEST_TYPE.GET\n            });\n            const { status, payload: { data } = {} } = response || {};\n            if (status === true) {\n                dispatch({\n                    type: FETCHING_CAR_DETAILS_COMPLETED,\n                    payload: data\n                });\n            } else if (status === false) {\n                dispatch({\n                    type: FETCHING_CAR_DETAILS_COMPLETED_WITH_ERROR\n                });\n            }\n        } catch (error) {\n            throw error;\n        }\n        return response;\n    };\n};\n\nfunction setCarDetails(state, data) {\n    const { car_details } = data;\n    if (car_details) {\n        return { ...car_details };\n    }\n    return state;\n}\n\nexport default (state = {}, action = {}) => {\n    const { type, payload = {} } = action;\n    switch (type) {\n        default:\n            return setCarDetails(state, payload);\n    }\n};\n","import { combineReducers } from \"redux\";\nimport years from \"./years\";\nimport companies from \"./companies\";\nimport cars from \"./models\";\nimport car_details from \"./cars\";\n\nconst rootReducer = combineReducers({\n    years,\n    companies,\n    cars,\n    car_details\n});\n\nexport default (state, action) => {\n    return rootReducer(state, action);\n};\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./modules\";\n// import LogRocket from \"logrocket\";\n\nconst enhancers = [];\n\nif (process.env.NODE_ENV === \"development\") {\n    const devToolsExtension = window.devToolsExtension;\n\n    if (typeof devToolsExtension === \"function\") {\n        enhancers.push(devToolsExtension());\n    }\n}\n\nlet middleWares = [thunk];\n\nconst composedEnhancers = compose(\n    applyMiddleware(...middleWares),\n    ...enhancers\n);\n\nexport default function configureStore() {\n    return createStore(rootReducer, composedEnhancers);\n}\n","import React from \"react\";\nimport { Spin, Icon } from \"antd\";\n\nexport default function IndefiniteLoader({ className, iconClassName }) {\n    return (\n        <div className=\"wp100\">\n            <Spin\n                className={`${className} `}\n                indicator={\n                    <Icon className={`${iconClassName} `} type=\"loading\" spin />\n                }\n            />\n        </div>\n    );\n}\n","export const numberFormat = value =>\n    new Intl.NumberFormat(\"en-IN\", {\n        style: \"currency\",\n        currency: \"INR\",\n        maximumFractionDigits: 2\n    }).format(value);\n","import React from 'react';\nimport { Input, List, Row, Col, Divider, Tag, Card, Progress } from 'antd';\n\nimport {\n    PATH\n} from \"../../constant\";\nimport { numberFormat } from \"../../helpers/numberFormatter\";\nconst { CheckableTag } = Tag;\nconst { Search } = Input;\n\nconst { Meta } = Card;\n\nclass CarFilters extends React.Component {\n    state = {\n        data: [],\n        loading: false,\n        selectedTags: [],\n        selectedCompanyTags: [],\n        selectedModelTags: [],\n        showCompany: false,\n        showModel: false,\n        searchOn: 'year_of_make',\n        search_input: ''\n    };\n\n    componentDidMount() {\n\n    }\n\n    handleChange (tag, checked) {\n        const selected = checked ? [tag] : [];\n        this.setState({ selectedTags: selected });\n        let showCompany = true;\n        let showModel = true;\n        if(selected.length === 0){\n            showCompany=false;\n            showModel=false;\n            this.setState({selectedCompanyTags:[],searchOn:'year_of_make',search_input:''})\n        }else{\n            showCompany=true;\n            showModel=false;\n            const { fetchAllCarsCompanies } = this.props;\n            let query = {\n                year_of_make: tag\n            };\n            fetchAllCarsCompanies(query);\n            this.setState({selectedCompanyTags:[],searchOn:'companies',search_input:''})\n        }\n        this.setState({showCompany:showCompany,showModel:showModel});\n    }\n\n    handleChangeCompany(tag, checked) {\n        const selected = checked ? [tag] : [];\n        this.setState({ selectedCompanyTags: selected });\n        let showModel = true;\n        if(selected.length === 0){\n            showModel=false;\n            this.setState({searchOn:'companies',search_input:''})\n        }else{\n            showModel=true;\n            const { fetchAllCarsModels } = this.props;\n            const { selectedTags } = this.state;\n            let query = {\n                year_of_make: selectedTags[0],\n                company: tag\n            };\n            fetchAllCarsModels(query);\n            this.setState({search_input:'',searchOn:'models'})\n        }\n        this.setState({showModel:showModel});\n    }\n\n    handleChangeModel(tag, checked) {\n        const selected = checked ? [tag] : [];\n        this.setState({ selectedModelTags: selected });\n    }\n\n    onSearch = (value) => {\n        const { searchOn, selectedTags, selectedCompanyTags } = this.state;\n        if(searchOn === 'year_of_make'){\n            const { fetchAllCarsYearOfMake } = this.props;\n            fetchAllCarsYearOfMake(value);\n        }else if(searchOn === 'companies'){\n            const { fetchAllCarsCompanies } = this.props;\n            fetchAllCarsCompanies({\n                year_of_make: selectedTags[0],\n                company:value\n            });\n        }else if(searchOn === 'models'){\n            const { fetchAllCarsModels } = this.props;\n            fetchAllCarsModels({\n                year_of_make: selectedTags[0],\n                company:selectedCompanyTags[0],\n                model:value\n            });\n        }\n    };\n    onChange = (event) => {\n        const { searchOn, selectedTags, selectedCompanyTags } = this.state;\n        let search = event.target.value;\n        this.setState({search_input:search});\n        if(searchOn === 'year_of_make'){\n            const { fetchAllCarsYearOfMake } = this.props;\n            fetchAllCarsYearOfMake(search);\n        }else if(searchOn === 'companies'){\n            const { fetchAllCarsCompanies } = this.props;\n            fetchAllCarsCompanies({\n                year_of_make: selectedTags[0],\n                company:search\n            });\n        }else if(searchOn === 'models'){\n            const { fetchAllCarsModels } = this.props;\n            fetchAllCarsModels({\n                year_of_make: selectedTags[0],\n                company:selectedCompanyTags[0],\n                model:search\n            });\n        }\n    };\n\n    showCar = (car_id) => {\n        const { history } = this.props;\n        history.push( PATH.CARS + '/' +car_id);\n    }\n\n    render() {\n        const {\n            years={},\n            companies={},\n            cars={}\n        } = this.props;\n        let year_data = [];\n        let company_data = [];\n        let model_data = [];\n\n        const { selectedTags, showCompany, showModel, selectedCompanyTags, search_input = '' } = this.state;\n        Object.keys(years).map(function(key) {\n            year_data.push(years[key]);\n        });\n        Object.keys(companies).map(function(key) {\n            company_data.push(companies[key]);\n        });\n        Object.keys(cars).map(function(key) {\n            model_data.push(cars[key]);\n        });\n       return (\n            <>\n                <Row>\n                    <Col span={5}>\n                    <Search\n                        placeholder=\"input search text\"\n                        allowClear\n                        onSearch={this.onSearch}\n                        onChange={this.onChange}\n                        style={{  margin: '0 10px' }}\n                        value={search_input}\n                    />\n                    <List\n                        size=\"Large\"\n                        header={<div style={{textAlign:\"center\",fontWeight:'bold'}}>YEAR OF MAKE</div>}\n                        bordered\n                        dataSource={year_data}\n                        renderItem={\n                            item => <List.Item>\n                                    <CheckableTag\n                                        key={item}\n                                        checked={selectedTags.indexOf(item) > -1}\n                                        onChange={checked => this.handleChange(item, checked)}\n                                    >\n                                        <span style={{cursor:'pointer',fontSize:'16px'}}>{item}</span>\n                                    </CheckableTag>\n                            </List.Item>\n                            }\n                        style={{  width:'100%',margin: '10px 0 0 10px',overflow: 'auto',height: '80vh',backgroundColor:'#E8EFF1'}}\n                    />\n                    </Col>\n                    <Col span={8}>\n                    <List\n                        size=\"Large\"\n                        header={<div style={{textAlign:\"center\",fontWeight:'bold'}}>COMPANY</div>}\n                        bordered\n                        dataSource={company_data}\n                        renderItem={\n                            item => <List.Item>\n                                    <CheckableTag\n                                        key={item}\n                                        checked={selectedCompanyTags.indexOf(item) > -1}\n                                        onChange={checked => this.handleChangeCompany(item, checked)}\n                                    >\n                                        <span style={{cursor:'pointer',fontSize:'16px'}}>{item}</span>\n                                    </CheckableTag>\n                            </List.Item>\n                            }\n                        style={{margin: '42px 0',overflow: 'auto',height: '80vh',backgroundColor:'#E8EFF1'}}\n                        hidden={!showCompany}\n                    />\n                    </Col>\n                    <Col span={8}>\n                        <List\n                            size=\"Large\"\n                            header={<div style={{textAlign:\"center\",fontWeight:'bold'}}>MODEL</div>}\n                            bordered\n                            dataSource={model_data}\n                            renderItem={\n                                item => <List.Item>\n                                        <Card\n                                            onClick={()=>this.showCar(item.id)}\n                                            style={{ width: 300, margin: 'auto', cursor: 'pointer',backgroundColor:'#8CB1B7',border:'2px solid #8CB1B7'}}\n                                            cover={\n                                            <img\n                                                alt=\"example\"\n                                                src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\n                                            />\n                                            }\n                                            actions={[\n                                                <>\n                                                <div \n                                                    style={{ fontSize: \"18px\", margin:'auto', color:'black'}}\n                                                >\n                                                    Amount\n                                                </div>\n                                                <div \n                                                    style={{ fontSize: \"14px\", margin:'auto'}}\n                                                >\n                                                     {numberFormat(item.amount)}\n                                                </div>\n                                                </>,\n                                                item.is_available\n                                                    ?\n                                                    <Progress \n                                                        type=\"circle\" \n                                                        percent={100} \n                                                        width={40} \n                                                        title='Available'\n                                                    /> \n                                                    :\n                                                    <Progress \n                                                        type=\"circle\" \n                                                        percent={100} \n                                                        width={40} \n                                                        title='Not available'\n                                                        status='exception'\n                                                    /> \n                                            ]}\n                                        >\n                                            <Meta\n                                            title={item.company+` `+item.model}\n                                            description={`YOM - `+item.year_of_make}\n                                            />\n                                        </Card>\n                                </List.Item>\n                            }\n                            style={{margin: '42px 0',overflow: 'auto',height: '80vh',backgroundColor:'#E8EFF1'}}\n                            hidden={!showModel}\n                        />\n                    </Col>\n                </Row>\n                \n                \n                <Divider orientation=\"left\"></Divider>\n\n                </>\n        );\n    }\n    \n}\n\n\nexport default CarFilters;\n","import React, { Component, Fragment } from \"react\";\nimport { Spin } from \"antd\";\nimport CarFilters from  \"../../car-filters\";\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    async getData() {\n        const { fetchAllCarsYearOfMake } = this.props;\n        try {\n            const res = await fetchAllCarsYearOfMake();\n        } catch (err) {\n            console.log(err);\n        }\n        this.setState({ loading: false });\n    }\n\n    renderLoading() {\n        return <Spin></Spin>;\n    }\n    \n\n    render() {\n\n        const {\n            years,\n            companies,\n            cars,\n            fetchAllCarsYearOfMake,\n            fetchAllCarsCompanies,\n            fetchAllCarsModels,\n            history\n        } = this.props;\n        const { loading } = this.state;\n        if (loading) {\n            return this.renderLoading();\n        }\n        \n        return (\n            <Fragment>\n                <div className={\"pt10 pl75\"} style={{backgroundColor:'#CBDCDF'}}>\n                    <h2 style={{textAlign:\"center\",color:'#8CB1B7'}}>Car Bazaar</h2>\n                    <CarFilters \n                        years={years} \n                        companies={companies} \n                        cars={cars}\n                        fetchAllCarsYearOfMake={fetchAllCarsYearOfMake} \n                        fetchAllCarsCompanies={fetchAllCarsCompanies} \n                        fetchAllCarsModels={fetchAllCarsModels}\n                        history={history}\n                    />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default Home;\n","import { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Home from \"../../../components/pages/home\";\nimport { fetchAllCarsYearOfMake } from \"../../../modules/years\";\nimport { fetchAllCarsCompanies } from \"../../../modules/companies\";\nimport { fetchAllCarsModels } from \"../../../modules/models\";\n\nconst mapStateToProps = state => {\n    const { years, companies, cars } = state;\n\n    return { years, companies, cars };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchAllCarsYearOfMake: (query) => {\n            dispatch(fetchAllCarsYearOfMake(query));\n        },\n        fetchAllCarsCompanies: (query) => {\n            dispatch(fetchAllCarsCompanies(query));\n        },\n        fetchAllCarsModels: (query) => {\n            dispatch(fetchAllCarsModels(query));\n        }\n    };\n};\n\nexport default withRouter(\n    connect(mapStateToProps, mapDispatchToProps)(Home)\n);\n","export const getAllCarsYearOfMakeUrl = () => {\n    return \"/cars/years\";\n};\n\nexport const getAllCarsCompaniesrl = () => {\n    return \"/cars/companies\";\n};\n\nexport const getAllCarsModelsrl = () => {\n    return \"/cars/models\";\n};\n\nexport const getCarDetailsUrl = (car_id) => {\n    return `/cars/${car_id}`;\n};\n\n","import React from \"react\";\nimport { CardNumberElement, CardExpiryElement, CardCvcElement } from \"@stripe/react-stripe-js\";\nimport { Row, Col, Input } from \"antd\";\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#303238\",\n      fontSize: \"16px\",\n      fontFamily: \"sans-serif\",\n      fontSmoothing: \"antialiased\",\n      \"::placeholder\": {\n        color: \"#CFD7DF\"\n      }\n    },\n    invalid: {\n      color: \"#e5424d\",\n      \":focus\": {\n        color: \"#303238\"\n      }\n    }\n  }\n};\n\nclass CardSection extends React.Component  {\n  constructor(props) {\n    super(props);\n    this.state = {\n        email_id: ''\n    };\n}\n  handleChange = (event) => {\n    let value=event.target.value;\n    this.setState({email_id:value});\n    this.props.handleChange(value);\n  }\n render() {\n  const { email_id = '' } = this.state;\n  return (\n    <>\n        <Row>\n            <Col span={24}>\n            <h6 style={{color:'#8CB1B7'}}>Email ID</h6>\n            </Col>                              \n        </Row>\n        <Row>\n            <Col span={24}>\n            <Input type={'email'} autoComplete={\"off\"} value={email_id} onChange={this.handleChange} required></Input>\n            </Col>\n        </Row>\n        <Row style={{paddingTop:'20px'}}>\n          <h6 style={{color:'#8CB1B7'}}>CARD NUMBER</h6>\n        </Row>\n            <Row>\n                <Col span={24}>\n                  <CardNumberElement options={CARD_ELEMENT_OPTIONS}/>\n                </Col>                              \n            </Row>\n            <Row style={{paddingTop:'20px'}}>\n                <h6 style={{color:'#8CB1B7'}}>EXPIRATION DATE</h6>\n            </Row>\n            <Row>\n                <Col span={24}>\n                  <CardExpiryElement/>\n                </Col>                              \n            </Row>\n            <Row style={{paddingTop:'20px'}}>\n                <h6 style={{color:'#8CB1B7'}}>CVV</h6>\n            </Row>\n            <Row>\n                <Col span={24}>\n                <CardCvcElement/>\n                </Col>                              \n            </Row>\n            \n    </>\n  );\n }\n}\n\nexport default CardSection;","import React from \"react\";\nimport { ElementsConsumer, CardCvcElement, CardNumberElement, CardExpiryElement } from \"@stripe/react-stripe-js\";\nimport {  Row, Col, message, Button } from \"antd\";\nimport { getPaymentUrl } from \"../../helpers/url/payments\";\nimport { xFetch } from \"../../helpers/xhrHelpers\";\nimport CardSection from \"../card-section\";\nimport { PATH, REQUEST_TYPE } from \"../../constant\";\n\nclass CheckoutForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buttonLoading: false,\n            button_text: 'Buy Now',\n            email_id: ''\n        };\n    }\n    doPayment = async({email_id,token}) => {\n\n        const url = getPaymentUrl();\n        let pathname = window.location.pathname;\n        let car_id = pathname.split('/')[2];\n        const response = await xFetch({\n            url: url,\n            method: REQUEST_TYPE.POST,\n            body: {\n                car_id:car_id,\n                email_id: email_id,\n                token: token.id\n            }\n        });\n        const { status, payload: { data } = {} } = response || {};\n        if (status === true) {\n            message.success('Payment Done');\n            window.location.href=PATH.HOME;\n        } else if (status === false) {\n            message.error('Payment Unsuccessful.');\n            this.setState({buttonLoading:false,button_text:'Buy Now'});\n        }\n\n    }\n  handleSubmit = async event => {\n    event.preventDefault();\n    const { stripe, elements } = this.props;\n    if (!stripe || !elements) {\n      return;\n    }\n\n    const expiry = elements.getElement(CardExpiryElement);\n    const cvc = elements.getElement(CardCvcElement);\n    const card = elements.getElement(CardNumberElement);\n    this.setState({buttonLoading:true,button_text:'Paying'});\n    const result = await stripe.createToken(card);\n    if (result.error) {\n      message.error(result.error.message);\n      this.setState({buttonLoading:false,button_text:'Buy Now'});\n    } else {\n      let token = result.token;\n      const { email_id = ''} =this.state;\n      this.doPayment({email_id,token});\n    }\n  };\n  handleChange = (value) => {\n    this.setState({email_id:value});\n  }\n\n  render() {\n      const { buttonLoading = true, email_id= '' } = this.state;\n    return (\n      <div>\n        <form>\n          <CardSection email_id={email_id} handleChange={this.handleChange}/>\n          <Row style={{paddingTop:'10px',textAlign:'center'}}>\n            <Col span={24}>\n            <Button disabled={!this.props.stripe} type={\"primary\"} onClick={this.handleSubmit} loading={buttonLoading} className={'buy-button'}>\n                Buy Now\n            </Button>                                \n            </Col>                              \n            </Row>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default function InjectedCheckoutForm() {\n  return (\n    <ElementsConsumer>\n      {({ stripe, elements }) => (\n        <CheckoutForm stripe={stripe} elements={elements}/>\n      )}\n    </ElementsConsumer>\n  );\n}","export const getPaymentUrl = () => {\n    return \"/payments\";\n};\n\n","import React, { Component } from \"react\";\nimport { Spin, Card,Progress } from \"antd\";\nimport { CloseOutlined } from '@ant-design/icons';\nimport { numberFormat } from \"../../../helpers/numberFormatter\";\nimport car from \"../../../assets/images/car.png\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport CheckoutForm from \"../../checkout\";\nimport { PATH } from \"../../../constant\";\nconst stripePromise = loadStripe(\"pk_test_51HxrOtJw9Rw8Ooy9Klh9WH3iMznp1E0PrMsEBM1zns26Qm0qoTT7fun8KWiFnnk9AQ7kEHpuzIr3bmuU73wKIVyK0059G9cgkS\");\n\nclass Cars extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            stripe:window.Stripe('pk_test_51HxrOtJw9Rw8Ooy9Klh9WH3iMznp1E0PrMsEBM1zns26Qm0qoTT7fun8KWiFnnk9AQ7kEHpuzIr3bmuU73wKIVyK0059G9cgkS'),\n            loading: true,\n            card_number_1: null,\n            card_number_2: null,\n            card_number_3: null,\n            card_number_4: null,\n            expiry_date: null,\n            cvv:null\n        };\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    async getData() {\n        const { fetchCarDetails,match } = this.props;\n        const { params:{car_id=''} } = match;\n        try {\n            const res = await fetchCarDetails(car_id);\n        } catch (err) {\n            console.log(err);\n        }\n        this.setState({ loading: false });\n    }\n\n    renderLoading() {\n        return <Spin></Spin>;\n    }\n\n    returnToHome = () => {\n        window.location.href=PATH.HOME;\n    }\n\n    render() {\n\n        const {\n            car_details\n        } = this.props;\n        const { loading } = this.state;\n        if (loading) {\n            return this.renderLoading();\n        }\n        const { model = '' , company = '' , is_available = false , amount = 0 , year_of_make = 1990 } = car_details;\n        const  tax = (amount*(18))/100;\n        return (\n            <div  style={{backgroundColor:'#CBDCDF',height:'100vh', padding:'70px 0 0 0'}}>\n                <div style={{width:'85vw',margin:'auto',paddingLeft:'20px'}}>\n                    <p style={{color:'#8CB1B7',fontSize:'13px'}}>YOU ARE PURCHASING</p>\n                    <h3 style={{color:'#73686C'}}>{company+` `+model+` , manufactured in `+ year_of_make}</h3>\n                </div>\n                <div style={{height:'60vh',backgroundColor:'#E8EFF1',width:'85vw',margin:'auto'}}>\n                    <Card\n                        style={{ width: '30vw',position:'fixed',backgroundColor:'transparent',margin:'10vh'}}\n                        cover={<img alt=\"example\" src={car} />}\n                        bordered={false}\n                    >\n                    </Card>\n                    <div style={{float:'right',borderRadius:'100%',height:'20px',width:'20px',cursor:'pointer'}} title={'BACK'} onClick={this.returnToHome}>\n                        <CloseOutlined style={{fontSize:'30px',position:'absolute',marginTop:'-16px',padding:'5px',borderRadius:'100%',backgroundColor:'#CBDCDF'}}/>\n                    </div>\n                    <div style={{height:'85vh',backgroundColor:'#FFFFFF',width:'25vw',top:'-12.5vh',position:'relative',float:'right',marginRight:'15vh',boxShadow:'0 35px 50px -30px rgba(0, 0, 0, 0.2)'}}>\n                        <div style={{height:'12.5vh',backgroundColor:'#E8EFF1'}}>\n                            <h2 style={{color:'#8CB1B7',textAlign:'center',padding:'40px 0 0 0',letterSpacing:'5px'}}>CARD DETAILS</h2>\n                        </div>\n                        <div style={{height:'56vh',backgroundColor:'#FFFFFF',padding:'30px 0 0 0', margin:'20px'}}>\n                        <Elements stripe={stripePromise}>\n                            <CheckoutForm stripe={this.state.stripe} total={amount+tax}/>\n                        </Elements>\n                        </div>\n                        <div style={{height:'12.5vh',backgroundColor:'#8CB1B7',cursor:'pointer'}}>\n                            <h2 style={{color:'#FFFFFF',textAlign:'center',padding:'40px 0 0 0',letterSpacing:'5px'}}>PURCHASE</h2>\n                            <p style={{color:'#FFFFFF',textAlign:'center'}}>({(numberFormat(amount+tax))})</p>\n                        </div>\n                    </div>\n                </div>\n                <div style={{width:'85vw',margin:'auto',paddingLeft:'20px',paddingTop:'10px'}}>\n                    <div style={{display:\"inline-block\",padding:'0 20px'}}>\n                        <h6 style={{color:'#8CB1B7'}}>AMOUNT</h6>\n                        <h3 style={{color:'#73686C'}}>{numberFormat(amount)}</h3>\n                    </div>\n                    <div style={{display:\"inline-block\",backgroundColor:'#FFFFFF',width:'2px',height:'50px',margin:'0 10px'}}></div>\n                    <div style={{display:\"inline-block\",padding:'0 20px'}}>\n                        <h6 style={{color:'#8CB1B7'}}>TAX</h6>\n                        <h3 style={{color:'#73686C'}}>{numberFormat(tax)}</h3>\n                    </div>\n                    <div style={{display:\"inline-block\",backgroundColor:'#FFFFFF',width:'2px',height:'50px',margin:'0 10px'}}></div>\n                    <div style={{display:\"inline-block\",padding:'0 20px'}}>\n                        <h6 style={{color:'#8CB1B7'}}>TOTAL</h6>\n                        <h3 style={{color:'#73686C'}}>{numberFormat(tax+amount)}</h3>\n                    </div>\n                    <div style={{display:\"inline-block\",backgroundColor:'#FFFFFF',width:'2px',height:'50px',margin:'0 10px'}}></div>\n                    <div style={{display:\"inline-block\",padding:'0 20px'}}>\n                        {is_available\n                        ?\n                        <Progress \n                            type=\"circle\" \n                            percent={100} \n                            width={40} \n                            title='Available'\n                            style={{float:'left'}}\n                        /> \n                        :\n                        <Progress \n                            type=\"circle\" \n                            percent={100} \n                            width={40} \n                            title='Not available'\n                            status='exception'\n                            style={{float:'left'}}\n\n                        /> }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Cars;\n","import { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Cars from \"../../../components/pages/cars\";\nimport { fetchCarDetails } from \"../../../modules/cars\";\n\nconst mapStateToProps = state => {\n    const { car_details } = state;\n\n    return { car_details };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchCarDetails: (car_id) => {\n            dispatch(fetchCarDetails(car_id));\n        }\n    };\n};\n\nexport default withRouter(\n    connect(mapStateToProps, mapDispatchToProps)(Cars)\n);\n","import React, { Component, Suspense } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { PATH } from \"../constant\";\nimport Loading from \"../components/common/IndefiniteLoader\";\nimport HOME from  \"../containers/pages/home\";\nimport CARS from \"../containers/pages/cars\";\nclass Global extends Component {\n    render() {\n        const { history } = this.props;\n        return (\n            <Router history={history}>\n                <div className=\"App flex cmms\" style={{ overflow: \"hidden\" }}>\n                    <div className=\"flex-grow-1\">\n                        <Suspense\n                            fallback={<Loading />}\n                            className={\"wp100 mt20\"}\n                        >\n                            <Switch>\n                                <Route\n                                    exact\n                                    path={PATH.ROOT}\n                                    component={HOME}\n                                />\n                                <Route\n                                    exact\n                                    path={PATH.HOME}\n                                    component={HOME}\n                                />\n                                <Route\n                                    exact\n                                    path={\n                                        PATH.CARS +\n                                        `/:car_id`\n                                    }\n                                    component={CARS}\n                                />\n                            </Switch>\n                        </Suspense>\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default Global;\n","import React, { Component, Suspense } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./stylesheets/App.less\";\nimport Loading from \"./components/common/IndefiniteLoader\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { createBrowserHistory } from \"history\";\nimport GlobalRoute from\"./routes/global\";\n\n\nconst history = createBrowserHistory();\nclass App extends Component {\n    componentDidMount() {\n        \n    }\n\n    render() {\n        return (\n            <Router history={history}>\n                <Suspense fallback={<Loading className={\"wp100 mt20\"} />}>\n                    <GlobalRoute history={history} />\n                </Suspense>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","import App from \"../App\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n    const { auth: { isAuthenticated } = {} } = state;\n\n    return { isAuthenticated };\n};\n\nconst mapDispatchToProps = dispatch => {\n\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}